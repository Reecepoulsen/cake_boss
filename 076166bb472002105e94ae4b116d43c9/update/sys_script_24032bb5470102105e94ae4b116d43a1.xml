<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1128327_cake_good</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1128327_cake_good">ingredient_costVALCHANGESjavascript:global.getCurrencyFilter('x_1128327_cake_good','ingredient_cost', 'USD;USD')^ORpreparation_costVALCHANGESjavascript:global.getCurrencyFilter('x_1128327_cake_good','preparation_cost', 'USD;USD')^EQ<item endquery="false" field="ingredient_cost" goto="false" newquery="false" operator="VALCHANGES" or="false" value="javascript:global.getCurrencyFilter('x_1128327_cake_good','ingredient_cost', 'USD;USD')"/>
            <item endquery="false" field="preparation_cost" goto="false" newquery="false" operator="VALCHANGES" or="true" value="javascript:global.getCurrencyFilter('x_1128327_cake_good','preparation_cost', 'USD;USD')"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Good - Calc Suggested Price</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	const ingredientCost = parseFloat(current.getValue("ingredient_cost"));
	const prepCost = parseFloat(current.getValue("preparation_cost"));
	current.suggested_price = ingredientCost + prepCost;
	current.update();
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>reece.poulsen</sys_created_by>
        <sys_created_on>2024-03-21 00:37:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>24032bb5470102105e94ae4b116d43a1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Good - Calc Suggested Price</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cake Boss" source="x_1128327_cake">076166bb472002105e94ae4b116d43c9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cake Boss">076166bb472002105e94ae4b116d43c9</sys_scope>
        <sys_update_name>sys_script_24032bb5470102105e94ae4b116d43a1</sys_update_name>
        <sys_updated_by>reece.poulsen</sys_updated_by>
        <sys_updated_on>2024-03-21 00:37:50</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=24032bb5470102105e94ae4b116d43a1"/>
</record_update>
