<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>Refresh Data</action_name>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style>unstyled</form_style>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Refresh Data</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[const goodToOfferingGR = new GlideRecord("x_1128327_cake_goods_to_offerings");
goodToOfferingGR.addQuery("offering", current.getValue("sys_id"));
goodToOfferingGR.query();

let goodPrice = 0;
let preparationCost = 0;
let ingredientCost = 0;
while (goodToOfferingGR.next()) {
	const goodGR = goodToOfferingGR.good.getRefRecord();
	const price = parseFloat(goodGR.getValue("price"));
	const prepCost = parseFloat(goodGR.getValue("preparation_cost"));
	const ingCost = parseFloat(goodGR.getValue("ingredient_cost"));
	const qty = parseInt(goodToOfferingGR.getValue("quantity"));
	goodPrice += price * qty;
	preparationCost += prepCost * qty;
	ingredientCost += ingCost * qty;
}

current.good_price = goodPrice;
current.ingredient_cost = ingredientCost;
current.preparation_cost = preparationCost;
current.update();
action.setRedirectURL(current);]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>reece.poulsen</sys_created_by>
        <sys_created_on>2024-03-23 22:26:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>623162b6474d82105e94ae4b116d43ff</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Refresh Data</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cake Boss" source="x_1128327_cake">076166bb472002105e94ae4b116d43c9</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cake Boss">076166bb472002105e94ae4b116d43c9</sys_scope>
        <sys_update_name>sys_ui_action_623162b6474d82105e94ae4b116d43ff</sys_update_name>
        <sys_updated_by>reece.poulsen</sys_updated_by>
        <sys_updated_on>2024-03-23 22:29:10</sys_updated_on>
        <table>x_1128327_cake_offering</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
